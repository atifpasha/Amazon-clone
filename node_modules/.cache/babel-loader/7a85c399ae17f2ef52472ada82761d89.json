{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\atif\\\\Desktop\\\\Amazon\\\\amazon-clone\\\\src\\\\StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\"; // Prepares the dataLayer\n\nexport const StateContext = /*#__PURE__*/createContext(); // Wrap our app and provide the Data layer\n\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 73\n  }, this);\n}; // Pull information from the data layer\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["C:/Users/atif/Desktop/Amazon/amazon-clone/src/StateProvider.js"],"names":["React","createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D,C,CAEA;;AACA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAEP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAD;AAAA;;AAAA,sBAA2C,QACpE,YADoE,CACvD,QADuD;AAC9C,IAAA,KAAK,EAAKL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAD0B;AAAA,oBACIC,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3C;AAAA,CAAtB,C,CAKP;;GALaH,a;;KAAAA,a;AAMb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Prepares the dataLayer\r\nexport const StateContext = createContext();\r\n\r\n// Wrap our app and provide the Data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => ( <\r\n    StateContext.Provider value = { useReducer(reducer, initialState) } > { children } <\r\n    /StateContext.Provider>\r\n);\r\n\r\n// Pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}