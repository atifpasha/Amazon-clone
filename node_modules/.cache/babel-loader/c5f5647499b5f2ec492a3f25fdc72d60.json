{"ast":null,"code":"export const initialState = {\n  basket: [{}],\n  user: null\n}; // Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM _BASKET\":\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not available`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/atif/Desktop/Amazon/amazon-clone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,CAAC,EAAD,CADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKL;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIA,SAAK,qBAAL;AAEA,UAAIQ,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACR,MAAV,CAAhB;AAEA,YAAMc,KAAK,GAAGN,KAAK,CAACR,MAAN,CAAae,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAAhE,CAAd;;AACA,UAAGH,KAAK,IAAG,CAAX,EAAa;AAEXD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AAED,OAJD,MAIK;AAEHJ,QAAAA,OAAO,CAACS,IAAR,CACG,4BAA2BV,MAAM,CAACQ,EAAG,wBADxC;AAMD;;AAED,aAAM,EACJ,GAAGT,KADC;AAEJR,QAAAA,MAAM,EAACa;AAFH,OAAN;;AAIF;AACE,aAAOL,KAAP;AA9BJ;AAgCD,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["\r\nexport const initialState = {\r\n    basket: [{    }],\r\n    user: null\r\n  };\r\n  \r\n  // Selector\r\n  export const getBasketTotal = (basket) => \r\n    basket?.reduce((amount, item) => item.price + amount, 0);\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case \"ADD_TO_BASKET\":\r\n        return {\r\n          ...state,\r\n          basket: [...state.basket, action.item],\r\n        };\r\n        case \"REMOVE_FROM _BASKET\":\r\n\r\n        let newBasket = [...state.basket];\r\n\r\n        const index = state.basket.findIndex((basketItem) => basketItem.id === action.id )\r\n        if(index >=0){\r\n\r\n          newBasket.splice(index, 1);\r\n\r\n        }else{ \r\n\r\n          console.warn(\r\n            `Cant remove product (id: ${action.id}) as its not available`\r\n          );\r\n         \r\n          \r\n\r\n        }\r\n\r\n        return{\r\n          ...state,\r\n          basket:newBasket,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n"]},"metadata":{},"sourceType":"module"}